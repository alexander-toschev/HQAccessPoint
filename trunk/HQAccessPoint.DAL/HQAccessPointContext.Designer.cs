//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HQAccessPoint.DatabaseModel", "FK_Permissions_Widgets", "Widgets", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HQAccessPoint.DAL.Widget), "Permissions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HQAccessPoint.DAL.Permission), true)]

#endregion

namespace HQAccessPoint.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HQAccessPointContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HQAccessPointContext object using the connection string found in the 'HQAccessPointContext' section of the application configuration file.
        /// </summary>
        public HQAccessPointContext() : base("name=HQAccessPointContext", "HQAccessPointContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HQAccessPointContext object.
        /// </summary>
        public HQAccessPointContext(string connectionString) : base(connectionString, "HQAccessPointContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HQAccessPointContext object.
        /// </summary>
        public HQAccessPointContext(EntityConnection connection) : base(connection, "HQAccessPointContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Widget> Widgets
        {
            get
            {
                if ((_Widgets == null))
                {
                    _Widgets = base.CreateObjectSet<Widget>("Widgets");
                }
                return _Widgets;
            }
        }
        private ObjectSet<Widget> _Widgets;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Widgets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWidgets(Widget widget)
        {
            base.AddObject("Widgets", widget);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HQAccessPoint.DatabaseModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="accessMask">Initial value of the AccessMask property.</param>
        /// <param name="widgetID">Initial value of the WidgetID property.</param>
        public static Permission CreatePermission(global::System.String userID, global::System.Int32 accessMask, global::System.Int32 widgetID)
        {
            Permission permission = new Permission();
            permission.UserID = userID;
            permission.AccessMask = accessMask;
            permission.WidgetID = widgetID;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessMask
        {
            get
            {
                return _AccessMask;
            }
            set
            {
                if (_AccessMask != value)
                {
                    OnAccessMaskChanging(value);
                    ReportPropertyChanging("AccessMask");
                    _AccessMask = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccessMask");
                    OnAccessMaskChanged();
                }
            }
        }
        private global::System.Int32 _AccessMask;
        partial void OnAccessMaskChanging(global::System.Int32 value);
        partial void OnAccessMaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WidgetID
        {
            get
            {
                return _WidgetID;
            }
            set
            {
                if (_WidgetID != value)
                {
                    OnWidgetIDChanging(value);
                    ReportPropertyChanging("WidgetID");
                    _WidgetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WidgetID");
                    OnWidgetIDChanged();
                }
            }
        }
        private global::System.Int32 _WidgetID;
        partial void OnWidgetIDChanging(global::System.Int32 value);
        partial void OnWidgetIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HQAccessPoint.DatabaseModel", "FK_Permissions_Widgets", "Widgets")]
        public Widget Widget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Widget>("HQAccessPoint.DatabaseModel.FK_Permissions_Widgets", "Widgets").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Widget>("HQAccessPoint.DatabaseModel.FK_Permissions_Widgets", "Widgets").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Widget> WidgetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Widget>("HQAccessPoint.DatabaseModel.FK_Permissions_Widgets", "Widgets");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Widget>("HQAccessPoint.DatabaseModel.FK_Permissions_Widgets", "Widgets", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HQAccessPoint.DatabaseModel", Name="Widget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Widget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Widget object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Widget CreateWidget(global::System.Int32 id)
        {
            Widget widget = new Widget();
            widget.ID = id;
            return widget;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Metadata
        {
            get
            {
                return _Metadata;
            }
            set
            {
                OnMetadataChanging(value);
                ReportPropertyChanging("Metadata");
                _Metadata = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Metadata");
                OnMetadataChanged();
            }
        }
        private global::System.String _Metadata;
        partial void OnMetadataChanging(global::System.String value);
        partial void OnMetadataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HQAccessPoint.DatabaseModel", "FK_Permissions_Widgets", "Permissions")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("HQAccessPoint.DatabaseModel.FK_Permissions_Widgets", "Permissions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("HQAccessPoint.DatabaseModel.FK_Permissions_Widgets", "Permissions", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
